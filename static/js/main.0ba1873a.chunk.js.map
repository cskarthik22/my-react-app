{"version":3,"sources":["Navbar.js","Header.js","cpp/Code.js","CoreAPP.js","index.js"],"names":["Navbar","class","type","id","hidden","for","href","placeholder","Header","target","Code","props","programName","programCode","className","CoreAPP","state","programs","Fibonacci","String","raw","LIS","CoinChange","HeapSort","STL","MergeSort","this","keys","Object","StrictMode","map","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ba1873a.chunk.js","sourcesContent":["\nfunction Navbar() {\n  return (\n  <div class=\"navbar\">\n    <input type=\"checkbox\" id=\"click\" class=\"checkbox\" hidden></input>\n   <div class=\"sidebar\">\n     <label for=\"click\">\n        <div class=\"menu-icon\">\n          <div class=\"line line-1\"></div>\n          <div class=\"line line-2\"></div>\n          <div class=\"line line-3\"></div>\n       </div>\n     </label>\n     <ul class=\"social-media-list\">\n       <li> <a href=\"https://www.facebook.com/karthik.kaluvala.1/\" class=\"social-link\"><i class=\"fab fa-facebook-f\"></i></a></li>\n       <li> <a href=\"https://linkedin.com/in/cskarthik22\" class=\"social-link\"><i class=\"fab fa-linkedin-in\"></i></a></li>\n       <li> <a href=\"https://twitter.com/cskarthik22\" class=\"social-link\"><i class=\"fab fa-twitter\"></i></a></li>\n       <li> <a href=\"https://www.instagram.com/cskarthik22\" class=\"social-link\"><i class=\"fab fa-instagram\"></i></a></li>\n \n     </ul>\n   </div>\n   \n   <nav class=\"navigation\">\n     <div class=\"navigation-header\">\n       <h1 class=\"navigation-heading\"> core cs </h1>\n       <form class=\"navigation-search\">\n         <input type=\"text\" class=\"naviation-search-input\" placeholder=\"Search...\"></input>\n         <button class=\"navigation-search-btn\">\n           <i class=\"fas fa-search\"></i>\n         </button>\n       </form>\n     </div>\n     <ul class=\"navigation-list\">\n       <li class=\"navigation-item\"><a href=\"#\" class=\"navigation-link\"> home </a></li>\n       <li class=\"navigation-item\"><a href=\"#\" class=\"navigation-link\"> Sorting </a></li>\n       <li class=\"navigation-item\"><a href=\"#\" class=\"navigation-link\"> Divide-Conquer </a></li>\n       <li class=\"navigation-item\"><a href=\"#\" class=\"navigation-link\"> Greedy </a></li>\n       <li class=\"navigation-item\"><a href=\"#\" class=\"navigation-link\"> Backtracking </a></li>\n       <li class=\"navigation-item\"><a href=\"#\" class=\"navigation-link\"> Recursion </a></li>\n       <li class=\"navigation-item\"><a href=\"#\" class=\"navigation-link\"> DP (Bitmask) </a></li>\n       <li class=\"navigation-item\"><a href=\"#\" class=\"navigation-link\"> Graphs </a></li>\n       <li class=\"navigation-item\"><a href=\"#Others\" class=\"navigation-link\"> Links </a></li>\n     </ul>\n     \n     <div class=\"copyright\">\n       <p>&copy; 2021 CoreCS All Rights Reserved.</p>\n     </div>\n   </nav>\n   <div id=\"root-div\"></div>\n </div>\n  );\n}\n\nexport default Navbar;\n","function Header() {\n  return (\n    <header class=\"header\">\n    <div class=\"label-container\">\n    <div class=\"label-container label\"><a href=\"#Fibonacci\" class=\"navigation-link\"> Fibonacci </a></div>\n    <div class=\"label-container label\"><a href=\"#CoinChange\" class=\"navigation-link\"> CoinChange </a></div>\n    <div class=\"label-container label\"><a href=\"#LIS\" class=\"navigation-link\"> LIS </a></div>\n    <div class=\"label-container label\"><a href=\"#HeapSort\" class=\"navigation-link\"> HeapSort </a></div>\n    <div class=\"label-container label\"><a href=\"#MergeSort\" class=\"navigation-link\"> MergeSort </a></div>\n    <div class=\"label-container label\"><a href=\"#STL\" class=\"navigation-link\"> STL </a></div>\n    <div class=\"label-container label\"><a href=\"#Star\" class=\"navigation-link\"> Star </a></div>\n    <div class=\"label-container label\"><a href=\"#Parenthesis\" class=\"navigation-link\"> Parenthesis </a></div>\n    <div class=\"label-container label\"><a href=\"#Permutations\" class=\"navigation-link\"> Permutations </a></div>\n    <div class=\"label-container label\"><a href=\"#Combinations\" class=\"navigation-link\"> Combinations </a></div>\n    <div class=\"label-container label\"><a href=\"#Func-Pointers\" class=\"navigation-link\"> Func-Pointers </a></div>\n    <div class=\"label-container label\"><a href=\"#Reverse\" class=\"navigation-link\"> Reverse </a></div>\n    <div class=\"label-container label\"><a href=\"#Stack\" class=\"navigation-link\"> Stack </a></div>\n    <div class=\"label-container label\"><a href=\"#Queue\" class=\"navigation-link\"> Queue </a></div>\n    <div class=\"label-container label\"><a href=\"#Strings\" class=\"navigation-link\"> Strings </a></div>\n    <div class=\"label-container label\"><a href=\"https://github.com/cskarthik22/howtheysre\" class=\"navigation-link\" target=\"_blank\"> SRE </a></div>\n    <div class=\"label-container label\"><a href=\"https://github.com/cskarthik22/netshoot\" class=\"navigation-link\" target=\"_blank\"> Netshoot </a></div>\n    <div class=\"label-container label\"><a href=\"https://www.topcoder.com/thrive/articles/dynamic-programming-and-local-memoization-in-competitive-programming\" class=\"navigation-link\" target=\"_blank\"> DP-1 </a></div>\n    <div class=\"label-container label\"><a href=\"https://www.topcoder.com/thrive/articles/dynamic-programming-and-local-memoization-part-2\" class=\"navigation-link\" target=\"_blank\"> DP-2 </a></div>\n    <div class=\"label-container label\"><a href=\"https://www.youtube.com/watch?v=P8Xa2BitN3I\" class=\"navigation-link\" target=\"_blank\"> DP-3 </a></div>\n      \n      <div class=\"label-container label\"><a href=\"https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/\" class=\"navigation-link\" target=\"_blank\"> FFT </a></div>  \n      <div class=\"label-container label\"><a href=\"https://github.com/cskarthik22/coding-interview-university\" class=\"navigation-link\" target=\"_blank\"> Others </a></div>\n      <div class=\"label-container label\"><a href=\"https://github.com/cskarthik22/Notes/blob/master/Books/big-o-cheatsheet.pdf\" class=\"navigation-link\" target=\"_blank\"> Big-O </a></div>\n      <div class=\"label-container label\"><a href=\"https://www.youtube.com/watch?v=JnJq3Py0dyM&t=176s\" class=\"navigation-link\" target=\"_blank\"> Entropy </a></div>\n      <div class=\"label-container label\"><a href=\"#NQueens\" class=\"navigation-link\"> NQueens </a></div>\n      <div class=\"label-container label\"><a href=\"https://medium.com/basecs/tagged/data-structures\" class=\"navigation-link\" target=\"_blank\"> basecs </a></div>\n      <div class=\"label-container label\"><a href=\"#Bash\" class=\"navigation-link\"> Bash </a></div>\n      <div class=\"label-container label\"><a href=\"http://docker-saigon.github.io/post/Docker-Internals/\" class=\"navigation-link\" target=\"_blank\"> Docker </a></div>\n      <div class=\"label-container label\"><a href=\"https://cheatsheet.dennyzhang.com/cheatsheet-linuxinternals-a4\" class=\"navigation-link\" target=\"_blank\"> Linux </a></div>\n      <div class=\"label-container label\"><a href=\"https://www.thegeekstuff.com/2012/01/linux-inodes/\" class=\"navigation-link\" target=\"_blank\"> iNode </a></div>\n      <div class=\"label-container label\"><a href=\"https://github.com/ContainerSolutions/k8s-deployment-strategies\" class=\"navigation-link\" target=\"_blank\"> k8s-deploy-strategies </a></div>\n      <div class=\"label-container label\"><a href=\"https://sysadmincasts.com/\" class=\"navigation-link\" target=\"_blank\"> sysadmin </a></div>\n      <div class=\"label-container label\"><a href=\"#GIT\" class=\"navigation-link\"> GIT </a></div>\n      <div class=\"label-container label\"><a href=\"https://github.com/cskarthik22/Notes/tree/master/stanford/C/C%26C%2B%2B\" class=\"navigation-link\" target=\"_blank\"> C/C++ </a></div>\n\t    \n      <div class=\"label-container label\"><a href=\"http://cslibrary.stanford.edu/110/BinaryTrees.html\" class=\"navigation-link\" target=\"_blank\"> Binary Trees </a></div>\n      <div class=\"label-container label\"><a href=\"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html\" class=\"navigation-link\" target=\"_blank\"> Algo-01 </a></div>\n      <div class=\"label-container label\"><a href=\"https://visualgo.net/en\" class=\"navigation-link\" target=\"_blank\"> Algo-02 </a></div>\n      <div class=\"label-container label\"><a href=\"https://epdf.pub/search/data+structures\" class=\"navigation-link\" target=\"_blank\"> ebooks </a></div>\n      <div class=\"label-container label\"><a href=\"http://courses.csail.mit.edu/iap/interview/materials.php\" class=\"navigation-link\" target=\"_blank\"> *IMP* </a></div>\n      <div class=\"label-container label\"><a href=\"https://www.youtube.com/watch?v=qXLD2UHq2vk\" class=\"navigation-link\" target=\"_blank\"> PKI </a></div>\n      <div class=\"label-container label\"><a href=\"https://www.youtube.com/watch?v=4BfL0UHrzDY\" class=\"navigation-link\" target=\"_blank\"> VPN </a></div>\n      <div class=\"label-container label\"><a href=\"https://howdns.works/ep1/\" class=\"navigation-link\" target=\"_blank\"> DNS </a></div>\n      <div class=\"label-container label\"><a href=\"https://howhttps.works/why-do-we-need-https/\" class=\"navigation-link\" target=\"_blank\"> HTTPS </a></div>\n      <div class=\"label-container label\"><a href=\"http://indigoo.com/\" class=\"navigation-link\" target=\"_blank\"> Network-Slides </a></div>\n      <div class=\"label-container label\"><a href=\"https://www.openculture.com/computer_science_free_courses\" class=\"navigation-link\" target=\"_blank\"> Free Courses </a></div>\n      <div class=\"label-container label\"><a href=\"https://www.mulesoft.com/resources/api/what-is-an-api\" class=\"navigation-link\" target=\"_blank\"> API </a></div>\n      <div class=\"label-container label\"><a href=\"https://cheatsheet.dennyzhang.com/cheatsheet-systemdesign-a4\" class=\"navigation-link\" target=\"_blank\"> System Design </a></div>\n      <div class=\"label-container label\"><a href=\"https://www.youtube.com/watch?v=U6-X_QOwPcs&list=PLU_sdQYzUj2keVENTP0a5rdykRSgg9Wp-\" class=\"navigation-link\" target=\"_blank\"> Leet Code </a></div>\t    \n      <div class=\"label-container label\"><a href=\"https://github.com/cskarthik22/Notes/tree/master/Security\" class=\"navigation-link\" target=\"_blank\"> Secure Web API </a></div>\n      <div class=\"label-container label\"><a href=\"http://cse1.net/recaps/memory.html\" class=\"navigation-link\" target=\"_blank\"> Memory </a></div>\n      <div class=\"label-container label\"><a href=\"https://channel9.msdn.com/Browse/AllContent\" class=\"navigation-link\" target=\"_blank\"> Channel9 </a></div>\n      <div class=\"label-container label\"><a href=\"https://bost.ocks.org/mike/algorithms/\" class=\"navigation-link\" target=\"_blank\"> JS </a></div>\n      <div class=\"label-container label\"><a href=\"https://thecodingtrain.com/\" class=\"navigation-link\" target=\"_blank\"> P5js </a></div>\n      <div class=\"label-container label\"><a href=\"https://youtu.be/xIuBmOufbls\" class=\"navigation-link\" target=\"_blank\"> Network_Packets_3D </a></div>\n\t    \n\t    \n      <div class=\"label-container label\"><a href=\"https://codeshare.io/\" class=\"navigation-link\" target=\"_blank\"> Codeshare.io </a></div>\n      <div class=\"label-container label\"><a href=\"https://cocreate.csail.mit.edu/\" class=\"navigation-link\" target=\"_blank\"> WhiteBoard </a></div>\n      \n  </div>\n\n  </header>\n   );\n}\n\nexport default Header;\n","\nconst Code =(props) =>{\n    const { programName, programCode } = props;\n   \n    return (\n        <div> \n            <h1>{programName}</h1>\n            <section  id={programName} >\n                <pre className='prettyprint lang-cpp'>\n                {programCode}\n                </pre>\n            </section>\n        </div>\n    );\n  }\n  \n  export default Code;\n  ","import React from 'react';\nimport './index.css';\nimport './CSS/style.css';\nimport './CSS/banner.css';\nimport './CSS/desert.css';\nimport Navbar from './Navbar';\nimport Header from './Header';\nimport Code from './cpp/Code';\n\n//import reportWebVitals from './reportWebVitals';\n//import P5Wrapper from 'react-p5-wrapper';\n//import sketch from './Sketch';\n//import CartItem from './JSX/CartItem';\n//<P5Wrapper sketch={sketch} /> \n\nclass CoreAPP extends React.Component {\n  constructor () {\n      super();\nthis.state = \n{\nprograms : {\n  Fibonacci: String.raw`\n  int fibo(int n) {\n    if( n==0 || n==1) \n        return 1;\n    return fibo(n-1) + fibo(n-2);\n }\n\n int fibo_dp_bottomup(int n) {\n    /* Effective space utilization, instead of array, just maintain\n       only 2 varaibles */\n    int first = 1;\n    int second = 1;\n    int ans = 0;\n    if (n==0 || n==1)\n        return 1;\n    for(int i=2; i&lt;=n; i++) {\n        ans = second + first;\n        first = second;\n        second = ans;\n    }\n    return ans;\n}\n\nint fibo_dp_topdown(int n, int* dp) {\n    // Memoization = Recursion + lookup table\n    if( n==0 || n==1) {\n        return 1;\n    }\n    if(dp[n]!= -1) {\n        return dp[n];\n    }\n    int ans = fibo_dp_topdown(n-1, dp) +\n              fibo_dp_topdown(n-2, dp);\n    dp[n] = ans;\n    \n    return ans;\n}                \n`,\nLIS: String.raw`\nint LIS(int* inputarr, int size) {\n  int* lis_arr = new int[size];\n  for(int i=0; i&lt;size; i++)\n  lis_arr[i]=1;\n  \n  for(int i=1; i&lt;size; i++){\n      for(int j=0; j&lt;i; j++) {\n          if(inputarr[i]>inputarr[j] && lis_arr[i] &lt; lis_arr[j]+1) {\n              lis_arr[i] = lis_arr[j]+1;\n          }\n      }\n  }\n  int maxlength= 0;\n  for( int i=0; i&lt;size; i++) {\n      if(lis_arr[i] > maxlength) {\n          maxlength = lis_arr[i];\n      }\n  }\n  delete [] lis_arr;\n  return maxlength;\n}`,\nCoinChange: String.raw`\nint coin_change_dp_bottomup(int amount, int* denomintions, int size) {\n  int *ways = new int[amount+1];\n  for(int i=0; i&lt; amount+1; i++) {\n      ways[i] = 0;\n  }\n  ways[0] = 1;\n  for(int i=1; i&lt;size; i++) {\n      for(int j=1; j&lt;amount+1; j++) {\n          if( denomintions[i] &lt;= j ) {\n              ways[j] = ways[j] + ways[j-denomintions[i]];\n          }\n      }\n  }\n  int ans = ways[amount];\n  delete [] ways;\n  return ans;\n};\n\nint coin_change_dp_topdown(int amount, int* denomintions, int size, int** output) {\n  if(amount == 0)\n      return 1;\n  \n  if(amount &lt; 0)\n      return 0;\n  \n  if(size == 0)\n      return 0;\n  \n  if(output[amount][size] &gt; -1)\n      return output[amount][size];\n  \n  int option1 = coin_change_dp_topdown(amount-denomintions[0],denomintions,size,output);\n  int option2 = coin_change_dp_topdown(amount, denomintions+1, size-1, output);\n  output[amount][size] = option1 + option2;\n  \n  return option1 + option2;\n}\n\nint coin_change(int amount, int* denomintions, int size) {\n  \n  if(amount == 0)\n      return 1;\n  \n  if(amount &lt; 0)\n      return 0;\n  \n  if(size == 0)\n      return 0;\n  /*\n   option1: choose first denomination\n   option2: don't choose first denomination\n   */\n  int option1 = coin_change(amount-denomintions[0],denomintions, size);\n  int option2 = coin_change(amount, denomintions+1, size-1);\n  return option1 + option2;\n}`,\nHeapSort: String.raw`\n#include &lt;bits/stdc++.h>\nusing namespace std;\n\nvoid swapfunc(vector&lt;pair&lt;double,string>> &vp, int large, int index) {\n    pair&lt;double, string> tp = vp[index];\n    vp[index] = vp[large];\n    vp[large] = tp;\n }\n\nvoid MaxHeapify(vector&lt;pair&lt;double,string>> &vp, int index, int n) {\n    int left = 2*index+1;\n    int right = 2*index+2;\n    int large = index;\n    \n    if(left &lt; n && vp[left].first > vp[index].first) {\n        large = left;\n    } else {\n        large = index;\n    }\n    \n    if(right &lt; n && vp[right].first >vp[large].first) {\n        large = right;\n    }\n    if( large != index) {\n        swapfunc(vp, large, index);\n        MaxHeapify(vp, large, n);\n    }\n}\n\nvoid BuildMapHeap(vector&lt;pair&lt;double,string>> &vp, int n) {\n    for( int i=n/2-1; i>=0; i--) {\n        MaxHeapify(vp, i, n);\n    }\n}\n\nvoid HeapSort(vector&lt;pair&lt;double,string>> &vp, int n) {\n    \n    for( int i=n-1; i>0; i--) {\n        swapfunc(vp, 0, i);\n        MaxHeapify(vp, 0, i);\n    }\n}\n\nint main()\n{\n    vector&lt;pair&lt;double,string>> vp;\n    int n;\n    cin >> n;\n  \n    for( int i=0; i &lt;n; i++) {\n        double item;\n        string name;\n        cin >> item >> name;\n        pair&lt;double,string> p = make_pair(item, name);\n        vp.push_back(p);\n    }\n    \n    cout &lt;&lt; endl;\n    // 1 14 10 8 7 9 3 2 4 6\n    for(auto it = vp.begin(); it != vp.end(); it++){\n        cout &lt;&lt; (*it).first &lt;&lt; \" - \" &lt;&lt; (*it).second  &lt;&lt; endl;\n    }\n    BuildMapHeap(vp, n);\n    \n    //HeapSort(vp, n);\n    \n    cout &lt;&lt; \" Max heap\" &lt;&lt; endl;\n    \n    for(auto it = vp.begin(); it != vp.end(); it++){\n        cout &lt;&lt; (*it).first << \" - \" &lt;&lt; (*it).second  &lt;&lt; endl;\n    }\n\n    return 0;\n}\n/*\n5                    \n1 one                        \n4 four                        \n2 two                       \n5 five                       \n3 three\n*/`,\nSTL: String.raw`\n#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <forward_list>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <tuple>\nusing namespace std;\n\n/*\nlist - doublelinked list\nforward-list - single linked list\n*/\n\nvoid display(vector<int> &v){\n    cout << \"vector display\" << endl;\n    auto it = v.begin();\n    while(it != v.end()){\n        cout << *it << \" \";\n        it++;\n    }\n    cout << endl;\n}\n\nvoid display_list(list<int> &v){\n    cout << \"list display\" << endl;\n    list<int>::iterator it;\n    it = v.begin();\n    while(it != v.end()){\n        cout << *it << \" \";\n        it++;\n    }\n    cout << endl;\n}\n\nvoid display_forard_list(forward_list<int> &v){\n    cout << \"forward_list display\" << endl;\n    forward_list<int>::iterator it;\n    it = v.begin();\n    while(it != v.end()){\n        cout << *it << \" \";\n        it++;\n    }\n    cout << endl;\n}\n\nint main()\n{\n    vector<int> v = { 1,2,10,23,12 };\n    v.push_back(25);\n    display(v);\n    v.pop_back();\n    display(v);\n    \n    list<int> l = { 1,2,10,23,12 };\n    l.push_back(25);\n    display_list(l);\n    \n    forward_list<int> fl = { 1,2,10,23,12 };\n    fl.push_front(25);\n    display_forard_list(fl);\n    \n    \n    stack<int> s;\n    s.push(100);\n    s.push(200);\n    s.push(250);\n    while(!(s.empty())) {\n        cout << s.top() << \" \";\n        s.pop();\n    }\n    cout << endl;\n    \n    queue<int> q;\n    q.push(100);\n    q.push(200);\n    q.push(250);\n    while(!(q.empty())){\n        cout << q.front() << \" \";\n        q.pop();\n    }\n    cout << endl;\n    \n    pair<int,string> p;\n    p = make_pair(10, \"john\");\n    cout << p.first << p.second << endl;\n    \n    vector<pair<int,string>> vp;\n    vp.push_back(make_pair(1,\"one\"));\n    vp.push_back(make_pair(2,\"two\"));\n    vp.push_back(make_pair(3,\"three\"));\n    \n    for(auto it = vp.begin(); it != vp.end(); it++){\n        cout << (*it).first << \" \" << (*it).second << endl;\n    }\n    \n    tuple<int, string, int> t;\n    t = make_tuple(10, \"john\", 35);\n    cout << get<0>(t) << \" \" << get<1>(t) << \" \" << get<2>(t) << endl;\n    \n    vector<tuple<int,string,int>> vt;\n    vt.push_back(make_tuple(10, \"john\", 35));\n    vt.push_back(make_tuple(20, \"mike\", 55));\n    vt.push_back(make_tuple(30, \"carl\", 45));\n    \n    for(auto it=vt.begin(); it!=vt.end(); it++){\n        cout << get<0>(*it) << \" \" << get<1>(*it) << \" \" << get<2>(*it) << endl;\n    }\n    \n    priority_queue<pair<int,string>> pq;\n    pq.push(make_pair(10,\"john\"));\n    pq.push(make_pair(30,\"carl\"));\n    pq.push(make_pair(20,\"mike\"));\n    \n    while(!(pq.empty())){\n        cout << pq.top().first << \" \" << pq.top().second << endl;\n        pq.pop();\n    }\n    \n    return 0;\n}`,\nMergeSort: String.raw`\n#include <stdio.h>\n    #include <stdlib.h>\n    \n    void Merge(int *arr, int low, int mid, int high) {\n        int n1 = mid - low + 1;\n        int n2 = high - mid;\n        \n        int arr1[n1],arr2[n2];\n        int i,j,k=0;\n        \n        for(i=0;i<n1;i++)\n           arr1[i]=arr[low+i];\n        for(j=0;j<n2;j++)\n          arr2[j]=arr[mid+1+j];\n          i=0;\n          j=0;\n          k=low;\n          while(i<n1 && j<n2) {\n              if(arr1[i]<=arr2[j]) \n                  arr[k++]=arr1[i++];\n              else \n                  arr[k++] = arr2[j++];\n          }\n          while(i<n1){\n              arr[k++] = arr1[i++];\n          }\n          while(j<n2){\n              arr[k++] = arr2[j++];\n          }\n        //printf(\"done...\");\n    }\n    \n    void MergeSort(int *arr,int low, int high){\n        int mid; \n        if(low<high) {\n            mid = low + (high-low)/2;\n            MergeSort(arr,low,mid);\n            MergeSort(arr,mid+1,high);\n            Merge(arr,low,mid,high);\n        }\n    }\n    \n    void Display(int *arr){\n        for(int i=0;arr[i]!=NULL;i++)\n            printf(\"%d \",arr[i]);\n    }\n    int main()\n    {\n        int A[]={1,14,10,8,7,9,3,2,4,6};\n        int arrlen = sizeof(A)/sizeof(int);\n        Display(&A);\n        printf(\"\\n\");\n        MergeSort(&A,0,arrlen-1);\n        Display(&A);\n    }`,    \n        }\n      }\n      \n     // this.testing();\n    // <CartItem  qty={1} price={990} title={\"Phone\"} pic={\"\"} />\n  }\n  render() {\n    const { programs } = this.state;\n    const keys = Object.keys(programs);\n      return(\n        <React.StrictMode>\n        <div id=\"root-div\">\n        <Navbar />\n            <Header />\n            <div id=\"container\">\n            { keys.map((key) => {\n                  return (\n                    <Code programCode={programs[key]} programName={key}/>\n                  )\n              }) \n            }\n            \n            </div>\n         </div>\n         \n       </React.StrictMode>\n      \n      );\n  }\n}\n\nexport default CoreAPP;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './CSS/style.css';\nimport './CSS/banner.css';\nimport './CSS/desert.css';\n\n\n//import reportWebVitals from './reportWebVitals';\n//import P5Wrapper from 'react-p5-wrapper';\n//import sketch from './Sketch';\n//import CartItem from './JSX/CartItem';\nimport CoreAPP from './CoreAPP';\nReactDOM.render(\n  <React.StrictMode>\n  <CoreAPP />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}